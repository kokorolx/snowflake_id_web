# docker-compose.yml

version: '3.7'
volumes:
  database:

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"

    deploy:
      placement:
        constraints:
          - node.labels.logging_e == true

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.1
    ports:
      - "5000:5000"
      - "127.0.0.1:12201:12201/udp"

    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    deploy:
      placement:
        constraints:
          - node.labels.logging_l == true

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    ports:
      - "5601:5601"

    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    deploy:
      placement:
        constraints:
          - node.labels.logging_k == true

  db:
    image: postgres:14
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: snowflake_id_development
    ports:
      - "5432:5432"
    deploy:
      placement:
        constraints:
          - node.labels.database == true
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    networks:
      - app

  base: &base
    build: .
    image: kokorolee/snowflake_id
    depends_on:
      - db
    environment:
      RAILS_ENV: development
      DATABASE_HOST: db
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      WORKER_ID: "{{.Task.Slot}}"
      DATACENTER_NAME: "{{ .Node.Hostname }}"
    deploy:
      replicas: 0
    networks:
      - app
  web:
    <<: *base
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -b '0.0.0.0'"
    ports:
      - "3000:3000"
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 20M
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://127.0.0.1:12201"

      - app
